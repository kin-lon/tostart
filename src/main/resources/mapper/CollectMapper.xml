<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tostart.dao.CollectMapper">
  <resultMap id="BaseResultMap" type="com.tostart.bean.Collect">
    <id column="collect_user_id" jdbcType="INTEGER" property="collectUserId" />
    <id column="collect_project_id" jdbcType="INTEGER" property="collectProjectId" />
    <result column="collect_date" jdbcType="TIMESTAMP" property="collectDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    collect_user_id, collect_project_id, collect_date
  </sql>
  <select id="selectByExample" parameterType="com.tostart.bean.CollectExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from collect
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="com.tostart.bean.CollectKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from collect
    where collect_user_id = #{collectUserId,jdbcType=INTEGER}
      and collect_project_id = #{collectProjectId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.tostart.bean.CollectKey">
    delete from collect
    where collect_user_id = #{collectUserId,jdbcType=INTEGER}
      and collect_project_id = #{collectProjectId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.tostart.bean.CollectExample">
    delete from collect
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.tostart.bean.Collect">
    insert into collect (collect_user_id, collect_project_id, 
      collect_date)
    values (#{collectUserId,jdbcType=INTEGER}, #{collectProjectId,jdbcType=INTEGER}, 
      #{collectDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.tostart.bean.Collect">
    insert into collect
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="collectUserId != null">
        collect_user_id,
      </if>
      <if test="collectProjectId != null">
        collect_project_id,
      </if>
      <if test="collectDate != null">
        collect_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="collectUserId != null">
        #{collectUserId,jdbcType=INTEGER},
      </if>
      <if test="collectProjectId != null">
        #{collectProjectId,jdbcType=INTEGER},
      </if>
      <if test="collectDate != null">
        #{collectDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.tostart.bean.CollectExample" resultType="java.lang.Long">
    select count(*) from collect
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update collect
    <set>
      <if test="record.collectUserId != null">
        collect_user_id = #{record.collectUserId,jdbcType=INTEGER},
      </if>
      <if test="record.collectProjectId != null">
        collect_project_id = #{record.collectProjectId,jdbcType=INTEGER},
      </if>
      <if test="record.collectDate != null">
        collect_date = #{record.collectDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update collect
    set collect_user_id = #{record.collectUserId,jdbcType=INTEGER},
      collect_project_id = #{record.collectProjectId,jdbcType=INTEGER},
      collect_date = #{record.collectDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.tostart.bean.Collect">
    update collect
    <set>
      <if test="collectDate != null">
        collect_date = #{collectDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where collect_user_id = #{collectUserId,jdbcType=INTEGER}
      and collect_project_id = #{collectProjectId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tostart.bean.Collect">
    update collect
    set collect_date = #{collectDate,jdbcType=TIMESTAMP}
    where collect_user_id = #{collectUserId,jdbcType=INTEGER}
      and collect_project_id = #{collectProjectId,jdbcType=INTEGER}
  </update>
</mapper>